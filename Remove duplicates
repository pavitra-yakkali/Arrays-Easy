class Solution {
    public int removeDuplicates(int[] nums) {
        int i = 0;
        for (int j = 1; j < nums.length; j++) {
            if (nums[i] != nums[j]) {
                nums[i + 1] = nums[j];
                i++;
            }
        }
        return i + 1;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] nums = {1, 1, 2, 2, 3, 3, 4, 5, 5};

        int k = sol.removeDuplicates(nums); // length of array after removing duplicates

        System.out.println("After removing duplicates:");
        for (int i = 0; i < k; i++) {
            System.out.print(nums[i] + " ");
        }
        System.out.println("\nNew length: " + k);
    }
}

/*
ðŸ•’ Time Complexity: O(n)
   - We traverse the array once to remove duplicates.

ðŸ§  Space Complexity: O(1)
   - No extra space is used, modifications are in-place.
*/
